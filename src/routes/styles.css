:root {
  --font-body: 'Barlow', sans-serif;
  --bannerBlue: rgb(215, 229, 241);
  --primaryBlue: rgb(0, 185, 255);
  --hoverBlue: rgb(0, 154, 212);
  --inputLightBlue: rgb(206, 217, 225);
  --lighterSteelBlue: rgb(102, 149, 180);
  --steelBlue: rgb(70, 130, 180);
  --notehubBlue: rgb(27, 58, 82);
  --notehubBlueTintLighter: rgb(114, 155, 181);
  --white: rgb(255, 255, 255);
  --backgroundWhite: rgb(247, 249, 251);
  --aqiGreen: rgb(0, 228, 0);
  --aqiYellow: rgb(255, 255, 0);
  --aqiOrange: rgb(255, 126, 0);
  --aqiRed: rgb(255, 0, 0);
  --aqiPurple: rgb(143, 63, 151);
  --aqiDarkRed: rgb(126, 0, 35);
  --aqiGrey: rgb(117, 117, 117);
  --warningTextYellow: rgb(102, 85, 31);
  --warningBackgroundYellow: rgb(255, 234, 167);
  --warningBorderYellow: rgb(254, 226, 131);
  --alertTextRed: rgb(140, 32, 41);
  --alertBackgroundRed: rgb(248, 215, 218);
  --alertBorderRed: rgb(245, 194, 196);
  --borderGrey: rgb(166, 188, 207);
  --lightGrey: rgb(204, 204, 204);
  --medGrey: rgb(160, 175, 185);
  --grey: rgb(128, 128, 128);
  --textBlack: rgb(5, 6, 7);
  --lightestGrey: rgba(0, 0, 0, 0.1);

  font-family: var(--font-body);
}

body {
  color: var(--notehubBlue);
  background: var(--backgroundWhite);
  margin: 0;
  box-sizing: border-box;
  font-style: normal;
  font-weight: normal;
  font-size: 1rem;
  line-height: 1.5;
}

h1 {
  font-size: 2rem;
}

section {
  margin: 20px auto 0 auto;
  text-align: center;
}

a {
  color: var(--primaryBlue);
  text-decoration: none;
  text-align: center;
  &:hover {
    text-decoration: underline;
  }
}

input,
select {
  font: inherit;
  padding: 0.75rem;
  margin: 0 0 1rem 0;
  border: 1px solid var(--lightGrey);
  border-radius: 0.25rem;
  width: 100%;
}

select {
  height: 45px;
}

button,
.btn {
  background: var(--primaryBlue);
  color: var(--white);
  border-radius: 0.3rem;
  border: none;
  padding: 0.5rem 1rem;
  font-size: 1rem;
  cursor: pointer;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,
    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

button:hover,
.btn:hover {
  text-decoration: none;
  background: var(--hoverBlue);
}

.svg-button {
  background: transparent;
  color: inherit;
  box-shadow: none;
  border: none;
  padding: 0;
  vertical-align: middle;
  width: 20px;

  &:hover {
    background: transparent;
  }

  &.info svg {
    color: var(--steelBlue);
  }
}

.svg-button svg,
.svg-link svg {
  color: var(--notehubBlue);
}

.svg-link svg {
  color: var(--primaryBlue);
  height: 18px;
  width: 18px;
}

/* here because svg is an icon imported into header and scoped css can't reach it */
header .svg-button svg {
  color: var(--white);
}

header .svg-button,
header .svg-button svg {
  /* Safari requires the height on both for whatever reason */
  height: 2rem;
  width: 2rem;
}

hr {
  margin: 1.5rem 0;
  border: 0;
  border-top: 1px solid var(--lightestGrey);
}

.warning {
  color: var(--warningTextYellow);
  background: var(--warningBackgroundYellow);
  border: 1px solid var(--warningBorderYellow);
  padding: 1rem;
  border-radius: 0.25rem;
  margin-top: 1rem;
}

.alert {
  color: var(--alertTextRed);
  background: var(--alertBackgroundRed);
  border: 1px solid var(--alertBorderRed);
  padding: 1rem;
  border-radius: 0.25rem;
  margin: 1rem 0;

  & :is(h4) {
    color: var(--alertTextRed);
    margin: 0 0 0.5rem 0;
    text-align: left;
  }

  & :is(a) {
    color: var(--alertTextRed);
    text-decoration: underline;
  }
}

/* chart container div with relative positioning and `maintainAspectRatio: false 
  option required to update the canvas render and display sizes for responsiveness: 
  https://www.chartjs.org/docs/latest/configuration/responsive.html#important-note */
.chart-container {
  position: relative;
  min-height: 300px;
  aspect-ratio: 1.4;
}

/* markdown doc styling  */
:where(h1, h2, h3, h4, h5, h6) {
  .anchor {
    position: relative;
    color: var(--notehubBlue);

    &::after {
      content: '#';
      opacity: 0;
      margin-left: 2px;
    }

    &:hover {
      color: var(--notehubBlue);
      text-decoration: none;
    }
  }

  &:hover .anchor::after {
    opacity: 1;
    color: var(--primaryBlue);
    text-decoration: none;
  }
}

code {
  overflow-wrap: break-word;
}

:where(p:has(img)) {
  padding: 1rem 0;

  & :is(img) {
    border-radius: 4px;
    box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.1);
    height: auto;
    max-width: 100%;
  }
}

blockquote {
  background-color: var(--white);
  margin: 16px 0;
  display: flow-root;
  padding: 0 16px 0 32px;
  border-left: 8px solid var(--notehubBlueTintLighter);
  border-radius: 4px;
  position: relative;

  &::before {
    content: ' ';
    position: absolute;
    left: 8px;
    top: 8px;
    background-image: url('/src/lib/images/left-quote.svg');
    height: 24px;
    width: 24px;
  }
}

table {
  width: 100%;
  border-radius: 4px;
  border-spacing: 0;

  & :is(thead) {
    border-bottom: none;
    & :is(th) {
      color: var(--white);
      background-color: var(--lighterSteelBlue);
      border: 1px solid var(--medGrey);
      padding: 0.75rem;
      margin: 0 0 1rem;
    }

    & :is(th:first-child) {
      border-right: none;
      border-top-left-radius: 4px;
    }

    & :is(th:last-child) {
      border-top-right-radius: 4px;
    }
  }

  & :is(tbody) {
    & :is(tr) {
      background: var(--white);
      & :is(td) {
        padding: 0.75rem;
        margin: 0 0 1rem;
        border-bottom: 1px solid var(--lightGrey);
        border-right: 1px solid var(--lightGrey);
        border-left: 1px solid var(--lightGrey);
      }

      & :is(td:first-child) {
        border-right: none;
      }
    }

    & :is(tr:last-child) {
      & :is(td) {
        border-bottom-left-radius: 4px;
        border-bottom-right-radius: 4px;
      }
    }
  }
}

@media (max-width: 992px) {
  section {
    max-width: 720px;
    padding: 0 1rem;
  }
}

/* fixes a bug in the toast library that allows the toast to be wider than the screen on screens under 600px wide  */
@media (max-width: 600px) {
  .toasts .toast {
    min-width: 40vw !important;
    min-height: 36px !important;
  }

  @media (max-width: 520px) {
    .chart-container {
      min-height: auto;
    }
  }
}
